{"ast":null,"code":"var _jsxFileName = \"/home/edopeppe2/\\xC1rea de Trabalho/sipleAI/src/components/Typewriter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatText = text => {\n  // Substitui **texto** por texto em negrito\n  let formatted = text.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n\n  // Substitui *texto* por texto em itálico\n  formatted = formatted.replace(/\\*(.*?)\\*/g, '<em>$1</em>');\n\n  // Substitui # Título por título formatado\n  formatted = formatted.replace(/^# (.*$)/gm, '<h1 class=\"text-2xl font-bold mb-4\">$1</h1>');\n  formatted = formatted.replace(/^## (.*$)/gm, '<h2 class=\"text-xl font-bold mb-3\">$1</h2>');\n  formatted = formatted.replace(/^### (.*$)/gm, '<h3 class=\"text-lg font-bold mb-2\">$1</h3>');\n\n  // Substitui quebras de linha por <br>\n  formatted = formatted.replace(/\\n/g, '<br>');\n\n  // Adiciona espaçamento entre parágrafos\n  formatted = formatted.replace(/<br><br>/g, '</p><p>');\n  return `<p>${formatted}</p>`;\n};\nconst Typewriter = ({\n  text,\n  speed = 30,\n  onComplete\n}) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [formattedText, setFormattedText] = useState('');\n  useEffect(() => {\n    if (currentIndex < text.length) {\n      const timeout = setTimeout(() => {\n        const newText = displayedText + text[currentIndex];\n        setDisplayedText(newText);\n        setFormattedText(formatText(newText));\n        setCurrentIndex(prev => prev + 1);\n      }, speed);\n      return () => clearTimeout(timeout);\n    } else if (onComplete) {\n      onComplete();\n    }\n  }, [currentIndex, text, speed, onComplete, displayedText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prose prose-invert prose-sm max-w-none\",\n    dangerouslySetInnerHTML: {\n      __html: formattedText\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Typewriter, \"H56xV+uspa0FG9CRsNqXvMAYmJo=\");\n_c = Typewriter;\nexport default Typewriter;\nvar _c;\n$RefreshReg$(_c, \"Typewriter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","formatText","text","formatted","replace","Typewriter","speed","onComplete","_s","displayedText","setDisplayedText","currentIndex","setCurrentIndex","formattedText","setFormattedText","length","timeout","setTimeout","newText","prev","clearTimeout","className","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/edopeppe2/Área de Trabalho/sipleAI/src/components/Typewriter.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface TypewriterProps {\n  text: string;\n  speed?: number;\n  onComplete?: () => void;\n}\n\nconst formatText = (text: string) => {\n  // Substitui **texto** por texto em negrito\n  let formatted = text.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n  \n  // Substitui *texto* por texto em itálico\n  formatted = formatted.replace(/\\*(.*?)\\*/g, '<em>$1</em>');\n  \n  // Substitui # Título por título formatado\n  formatted = formatted.replace(/^# (.*$)/gm, '<h1 class=\"text-2xl font-bold mb-4\">$1</h1>');\n  formatted = formatted.replace(/^## (.*$)/gm, '<h2 class=\"text-xl font-bold mb-3\">$1</h2>');\n  formatted = formatted.replace(/^### (.*$)/gm, '<h3 class=\"text-lg font-bold mb-2\">$1</h3>');\n  \n  // Substitui quebras de linha por <br>\n  formatted = formatted.replace(/\\n/g, '<br>');\n  \n  // Adiciona espaçamento entre parágrafos\n  formatted = formatted.replace(/<br><br>/g, '</p><p>');\n  \n  return `<p>${formatted}</p>`;\n};\n\nconst Typewriter: React.FC<TypewriterProps> = ({ text, speed = 30, onComplete }) => {\n  const [displayedText, setDisplayedText] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [formattedText, setFormattedText] = useState('');\n\n  useEffect(() => {\n    if (currentIndex < text.length) {\n      const timeout = setTimeout(() => {\n        const newText = displayedText + text[currentIndex];\n        setDisplayedText(newText);\n        setFormattedText(formatText(newText));\n        setCurrentIndex(prev => prev + 1);\n      }, speed);\n\n      return () => clearTimeout(timeout);\n    } else if (onComplete) {\n      onComplete();\n    }\n  }, [currentIndex, text, speed, onComplete, displayedText]);\n\n  return (\n    <div \n      className=\"prose prose-invert prose-sm max-w-none\"\n      dangerouslySetInnerHTML={{ __html: formattedText }}\n    />\n  );\n};\n\nexport default Typewriter; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQnD,MAAMC,UAAU,GAAIC,IAAY,IAAK;EACnC;EACA,IAAIC,SAAS,GAAGD,IAAI,CAACE,OAAO,CAAC,gBAAgB,EAAE,qBAAqB,CAAC;;EAErE;EACAD,SAAS,GAAGA,SAAS,CAACC,OAAO,CAAC,YAAY,EAAE,aAAa,CAAC;;EAE1D;EACAD,SAAS,GAAGA,SAAS,CAACC,OAAO,CAAC,YAAY,EAAE,6CAA6C,CAAC;EAC1FD,SAAS,GAAGA,SAAS,CAACC,OAAO,CAAC,aAAa,EAAE,4CAA4C,CAAC;EAC1FD,SAAS,GAAGA,SAAS,CAACC,OAAO,CAAC,cAAc,EAAE,4CAA4C,CAAC;;EAE3F;EACAD,SAAS,GAAGA,SAAS,CAACC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;;EAE5C;EACAD,SAAS,GAAGA,SAAS,CAACC,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC;EAErD,OAAO,MAAMD,SAAS,MAAM;AAC9B,CAAC;AAED,MAAME,UAAqC,GAAGA,CAAC;EAAEH,IAAI;EAAEI,KAAK,GAAG,EAAE;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAClF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,IAAIa,YAAY,GAAGT,IAAI,CAACa,MAAM,EAAE;MAC9B,MAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;QAC/B,MAAMC,OAAO,GAAGT,aAAa,GAAGP,IAAI,CAACS,YAAY,CAAC;QAClDD,gBAAgB,CAACQ,OAAO,CAAC;QACzBJ,gBAAgB,CAACb,UAAU,CAACiB,OAAO,CAAC,CAAC;QACrCN,eAAe,CAACO,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MACnC,CAAC,EAAEb,KAAK,CAAC;MAET,OAAO,MAAMc,YAAY,CAACJ,OAAO,CAAC;IACpC,CAAC,MAAM,IAAIT,UAAU,EAAE;MACrBA,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACI,YAAY,EAAET,IAAI,EAAEI,KAAK,EAAEC,UAAU,EAAEE,aAAa,CAAC,CAAC;EAE1D,oBACET,OAAA;IACEqB,SAAS,EAAC,wCAAwC;IAClDC,uBAAuB,EAAE;MAAEC,MAAM,EAAEV;IAAc;EAAE;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEN,CAAC;AAACnB,EAAA,CA1BIH,UAAqC;AAAAuB,EAAA,GAArCvB,UAAqC;AA4B3C,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}